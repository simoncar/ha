blueprint:
  name: PIN-Keypads for Zigbee2MQTT
  description: This Blueprint allows the synchronisation of an alarm control panel
    with a Zigbee2MQTT keypad. This means that the status of the alarm control panel
    is transmitted to the keypad and vice versa. Additionally, you can set a custom
    action for two wrong PINs. This way you can perform actions by entering specific
    wrong PINs.
  domain: automation
  input:
    z2m_keypad_path:
      name: MQTT State Topic of your Zigbee2MQTT Keypad
      description: 'The State Topic is composed of your Zigbee2MQTT base_topic (see
        your Z2M Addon Configuration) and the Friendly Name of your keypad in Z2M.
        Example: zigbee2mqtt/Keypad'
    z2m_keypad_path_set:
      name: MQTT Set Topic of your Zigbee2MQTT Keypad
      description: 'This is the same as your State Topic, with the addition of /set.
        Example: zigbee2mqtt/Keypad/set'
    pin:
      name: Pincode
      description: 'The valid pin code to be accepted as correct by your alarm system.
        Example: 1234'
    control_panel:
      name: Control Panel
      description: 'An alarm control panel. Example: https://www.home-assistant.io/integrations/manual'
      default: []
      selector:
        entity:
          domain:
          - alarm_control_panel
          multiple: false
    action_arming:
      name: Action Arming
      description: An action to be performed when the alarm panel changes to the arming
        state.
      default: []
      selector:
        action: {}
    action_armed_home:
      name: Action Armed Home
      description: An action to be performed when the alarm panel changes to the armed
        home state.
      default: []
      selector:
        action: {}
    action_armed_away:
      name: Action Armed Away
      description: An action to be performed when the alarm panel changes to the armed
        away state.
      default: []
      selector:
        action: {}
    action_disarmed:
      name: Action Disarmed
      description: An action to be performed when the alarm panel changes to the disarmed
        state.
      default: []
      selector:
        action: {}
    action_pending:
      name: Action Pending
      description: An action to be performed when the alarm panel changes to the pending
        state.
      default: []
      selector:
        action: {}
    action_panic:
      name: Action Panic
      description: An action to be performed when the panic / SOS button of the keypad
        is pressed.
      default: []
      selector:
        action: {}
    custpin1:
      name: Custom PIN 1
      default: 0
      description: 'A custom PIN to trigger a custom action. Example: 0000'
    action_cust1:
      name: Action Custom 1
      description: An action to be performed when custom PIN 1 ist entered.
      default: []
      selector:
        action: {}
    custpin2:
      name: Custom PIN 2
      default: 1111
      description: 'A custom PIN to trigger a custom action. Example: 1111'
    action_cust2:
      name: Action Custom 2
      description: An action to be performed when custom PIN 2 ist entered.
      default: []
      selector:
        action: {}
  source_url: https://community.home-assistant.io/t/zigbee2mqtt-sync-keypad-and-with-alarm-control-panel-states/345311
variables:
  pin_var: !input pin
  pin_var_cust1: !input custpin1
  pin_var_cust2: !input custpin2
trigger:
- platform: state
  entity_id: !input control_panel
  to: arming
  id: panel_arming
- platform: state
  entity_id: !input control_panel
  to: armed_home
  id: panel_armed_home
- platform: state
  entity_id: !input control_panel
  to: disarmed
  id: panel_disarmed
- platform: state
  entity_id: !input control_panel
  to: armed_away
  id: panel_armed_away
- platform: state
  entity_id: !input control_panel
  to: pending
  id: panel_pending
- platform: mqtt
  topic: !input z2m_keypad_path
  id: keypad_mqtt
condition: []
action:
- choose:
  - conditions:
    - condition: trigger
      id: panel_arming
    sequence:
    - choose:
      - conditions:
        - condition: state
          entity_id: !input control_panel
          state: armed_home
          attribute: next_state
        sequence:
        - service: mqtt.publish
          data:
            topic: !input z2m_keypad_path_set
            payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_day_zones\"\n  }\n}"
      - conditions:
        - condition: state
          entity_id: !input control_panel
          state: armed_away
          attribute: next_state
        sequence:
        - service: mqtt.publish
          data:
            topic: !input z2m_keypad_path_set
            payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"exit_delay\"\n  }\n}"
      default: []
    - choose:
      default: !input action_arming
  - conditions:
    - condition: trigger
      id: panel_armed_away
    sequence:
    - service: mqtt.publish
      data:
        topic: !input z2m_keypad_path_set
        payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_all_zones\"\n  }\n}"
    - choose:
      default: !input action_armed_away
  - conditions:
    - condition: trigger
      id: panel_disarmed
    sequence:
    - service: mqtt.publish
      data:
        topic: !input z2m_keypad_path_set
        payload: "{\n \"arm_mode\": \n  {\n    \"mode\": \"disarm\"\n  }\n}"
    - choose:
      default: !input action_disarmed
  - conditions:
    - condition: trigger
      id: panel_armed_home
    sequence:
    - service: mqtt.publish
      data:
        topic: !input z2m_keypad_path_set
        payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_day_zones\"\n  }\n}"
    - choose:
      default: !input action_armed_home
  - conditions:
    - condition: trigger
      id: panel_pending
    sequence:
    - choose:
      default: !input action_pending
  - conditions:
    - condition: trigger
      id: keypad_mqtt
    sequence:
    - choose:
      - conditions:
        - condition: template
          value_template: '{{ trigger.payload_json.action_transaction != null and
            trigger.payload_json.action_code == pin_var }}'
        sequence:
        - service: mqtt.publish
          data:
            topic: !input z2m_keypad_path_set
            payload: "{\n \"arm_mode\": \n  {\n    \"transaction\": \"{{ trigger.payload_json.action_transaction
              }}\",\n    \"mode\": \"{{ trigger.payload_json.action }}\"\n  }\n}"
    - choose:
      - conditions:
        - condition: template
          value_template: '{{ trigger.payload_json.action_transaction != null and
            trigger.payload_json.action_code == pin_var_cust1 }}'
        sequence:
        - choose:
          default: !input action_cust1
    - choose:
      - conditions:
        - condition: template
          value_template: '{{ trigger.payload_json.action_transaction != null and
            trigger.payload_json.action_code == pin_var_cust2 }}'
        sequence:
        - choose:
          default: !input action_cust2
    - choose:
      - conditions:
        - condition: template
          value_template: '{{ trigger.payload_json.action_code == pin_var and trigger.payload_json.action
            == "arm_all_zones" }}'
        sequence:
        - service: alarm_control_panel.alarm_arm_away
          target:
            entity_id: !input control_panel
          data:
            code: !input pin
      - conditions:
        - condition: template
          value_template: '{{ trigger.payload_json.action_code == pin_var and trigger.payload_json.action
            == "arm_day_zones" }}'
        sequence:
        - service: alarm_control_panel.alarm_arm_home
          target:
            entity_id: !input control_panel
          data:
            code: !input pin
      - conditions:
        - condition: template
          value_template: '{{ trigger.payload_json.action_code == pin_var and trigger.payload_json.action
            == "disarm" }}'
        sequence:
        - service: alarm_control_panel.alarm_disarm
          target:
            entity_id: !input control_panel
          data:
            code: !input pin
      - conditions:
        - condition: template
          value_template: '{{ trigger.payload_json.action == "panic" }}'
        sequence:
        - choose:
          default: !input action_panic
      - conditions:
        - condition: template
          value_template: '{{ trigger.payload_json.action_code != pin_var and trigger.payload_json.action_code
            | int(-1) != -1 }}'
        sequence:
        - service: mqtt.publish
          data:
            topic: !input z2m_keypad_path_set
            payload: "{\n \"arm_mode\": \n  {\n   \"transaction\": \"{{ trigger.payload_json.action_transaction
              }}\",\n   \"mode\": \"invalid_code\"\n  }\n}"
      - conditions:
        - condition: template
          value_template: '{{ trigger.payload_json.action == None }}'
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: !input control_panel
              state: armed_away
            sequence:
            - service: mqtt.publish
              data:
                topic: !input z2m_keypad_path_set
                payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_all_zones\"\n
                  \ }\n}"
          - conditions:
            - condition: state
              entity_id: !input control_panel
              state: armed_home
            sequence:
            - service: mqtt.publish
              data:
                topic: !input z2m_keypad_path_set
                payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_day_zones\"\n
                  \ }\n}"
          - conditions:
            - condition: state
              entity_id: !input control_panel
              state: disarmed
            sequence:
            - service: mqtt.publish
              data:
                topic: !input z2m_keypad_path_set
                payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"disarm\"\n  }\n}"
          - conditions:
            - condition: state
              entity_id: !input control_panel
              state: arming
            - condition: state
              entity_id: !input control_panel
              state: armed_home
              attribute: next_state
            sequence:
            - service: mqtt.publish
              data:
                topic: !input z2m_keypad_path_set
                payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_day_zones\"\n
                  \ }\n}"
          - conditions:
            - condition: state
              entity_id: !input control_panel
              state: arming
            - condition: state
              entity_id: !input control_panel
              state: armed_away
              attribute: next_state
            sequence:
            - service: mqtt.publish
              data:
                topic: !input z2m_keypad_path_set
                payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_all_zones\"\n
                  \ }\n}"
      default: []
  default: []
mode: parallel
max: 10
